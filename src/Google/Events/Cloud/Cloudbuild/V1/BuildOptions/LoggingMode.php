<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/events/cloud/cloudbuild/v1/data.proto

namespace Google\Events\Cloud\Cloudbuild\V1\BuildOptions;

use UnexpectedValueException;

/**
 * Specifies the logging mode.
 *
 * Protobuf type <code>google.events.cloud.cloudbuild.v1.BuildOptions.LoggingMode</code>
 */
class LoggingMode
{
    /**
     * The service determines the logging mode. The default is `LEGACY`. Do not
     * rely on the default logging behavior as it may change in the future.
     *
     * Generated from protobuf enum <code>LOGGING_UNSPECIFIED = 0;</code>
     */
    const LOGGING_UNSPECIFIED = 0;
    /**
     * Stackdriver logging and Cloud Storage logging are enabled.
     *
     * Generated from protobuf enum <code>LEGACY = 1;</code>
     */
    const LEGACY = 1;
    /**
     * Only Cloud Storage logging is enabled.
     *
     * Generated from protobuf enum <code>GCS_ONLY = 2;</code>
     */
    const GCS_ONLY = 2;

    private static $valueToName = [
        self::LOGGING_UNSPECIFIED => 'LOGGING_UNSPECIFIED',
        self::LEGACY => 'LEGACY',
        self::GCS_ONLY => 'GCS_ONLY',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(LoggingMode::class, \Google\Events\Cloud\Cloudbuild\V1\BuildOptions_LoggingMode::class);

