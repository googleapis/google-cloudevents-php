<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/events/firebase/remoteconfig/v1/data.proto

namespace Google\Events\Firebase\Remoteconfig\V1;

use UnexpectedValueException;

/**
 * Where the Remote Config update action originated.
 *
 * Protobuf type <code>google.events.firebase.remoteconfig.v1.RemoteConfigUpdateType</code>
 */
class RemoteConfigUpdateType
{
    /**
     * Catch-all for unrecognized enum values.
     *
     * Generated from protobuf enum <code>REMOTE_CONFIG_UPDATE_TYPE_UNSPECIFIED = 0;</code>
     */
    const REMOTE_CONFIG_UPDATE_TYPE_UNSPECIFIED = 0;
    /**
     * A regular incremental update.
     *
     * Generated from protobuf enum <code>INCREMENTAL_UPDATE = 1;</code>
     */
    const INCREMENTAL_UPDATE = 1;
    /**
     * A forced update.
     * The ETag was specified as "*" in an UpdateRemoteConfigRequest
     * request or the "Force Update" button was pressed on the console.
     *
     * Generated from protobuf enum <code>FORCED_UPDATE = 2;</code>
     */
    const FORCED_UPDATE = 2;
    /**
     * A rollback to a previous Remote Config template.
     *
     * Generated from protobuf enum <code>ROLLBACK = 3;</code>
     */
    const ROLLBACK = 3;

    private static $valueToName = [
        self::REMOTE_CONFIG_UPDATE_TYPE_UNSPECIFIED => 'REMOTE_CONFIG_UPDATE_TYPE_UNSPECIFIED',
        self::INCREMENTAL_UPDATE => 'INCREMENTAL_UPDATE',
        self::FORCED_UPDATE => 'FORCED_UPDATE',
        self::ROLLBACK => 'ROLLBACK',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

